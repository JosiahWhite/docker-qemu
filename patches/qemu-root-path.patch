diff --git a/net/slirp.c b/net/slirp.c
index f6dc039..a2d37a5 100644
--- a/net/slirp.c
+++ b/net/slirp.c
@@ -146,10 +146,11 @@ static int net_slirp_init(NetClientState *peer, const char *model,
                           bool ipv6, const char *vprefix6, int vprefix6_len,
                           const char *vhost6,
                           const char *vhostname, const char *tftp_export,
-                          const char *bootfile, const char *vdhcp_start,
-                          const char *vnameserver, const char *vnameserver6,
-                          const char *smb_export, const char *vsmbserver,
-                          const char **dnssearch, const char *vdomainname,
+                          const char *bootfile, const char *rootpath,
+                          const char *vdhcp_start, const char *vnameserver,
+                          const char *vnameserver6, const char *smb_export,
+                          const char *vsmbserver, const char **dnssearch,
+                          const char *vdomainname,
                           const char *tftp_server_name,
                           Error **errp)
 {
@@ -377,7 +378,7 @@ static int net_slirp_init(NetClientState *peer, const char *model,
     s->slirp = slirp_init(restricted, ipv4, net, mask, host,
                           ipv6, ip6_prefix, vprefix6_len, ip6_host,
                           vhostname, tftp_server_name,
-                          tftp_export, bootfile, dhcp,
+                          tftp_export, bootfile, rootpath, dhcp,
                           dns, ip6_dns, dnssearch, vdomainname, s);
     QTAILQ_INSERT_TAIL(&slirp_stacks, s, entry);
 
@@ -912,7 +913,7 @@ int net_init_slirp(const Netdev *netdev, const char *name,
                          ipv4, vnet, user->host,
                          ipv6, user->ipv6_prefix, user->ipv6_prefixlen,
                          user->ipv6_host, user->hostname, user->tftp,
-                         user->bootfile, user->dhcpstart,
+                         user->bootfile, user->rootpath, user->dhcpstart,
                          user->dns, user->ipv6_dns, user->smb,
                          user->smbserver, dnssearch, user->domainname,
                          user->tftp_server_name, errp);
diff --git a/qapi/net.json b/qapi/net.json
index 8f99fd9..7e87f43 100644
--- a/qapi/net.json
+++ b/qapi/net.json
@@ -142,6 +142,8 @@
 #
 # @bootfile: BOOTP filename, for use with tftp=
 #
+# @rootpath: DHCP root-path option, for use with tftp=
+#
 # @dhcpstart: the first of the 16 IPs the built-in DHCP server can
 #             assign
 #
@@ -189,6 +191,7 @@
     '*host':      'str',
     '*tftp':      'str',
     '*bootfile':  'str',
+    '*rootpath':  'str',
     '*dhcpstart': 'str',
     '*dns':       'str',
     '*dnssearch': ['String'],
diff --git a/qemu-options.hx b/qemu-options.hx
index 269eda7..3f7b1c1 100644
--- a/qemu-options.hx
+++ b/qemu-options.hx
@@ -2080,6 +2080,16 @@ qemu-system-i386 -hda linux.img -boot n -device e1000,netdev=n1 \
     -netdev user,id=n1,tftp=/path/to/tftp/files,bootfile=/pxelinux.0
 @end example
 
+@item rootpath=@var{path}
+When using the user mode network stack, broadcast @var{path} as the BOOTP
+root-path. In conjunction with @option{tftp}, this can be used to network boot
+a guest from a local directory.
+
+Example (using pxelinux):
+@example
+qemu-system-i386 -hda linux.img -boot n -net user,tftp=/path/to/tftp/files,rootpath=/nfs
+@end example
+
 @item smb=@var{dir}[,smbserver=@var{addr}]
 When using the user mode network stack, activate a built-in SMB
 server so that Windows OSes can access to the host files in @file{@var{dir}}
diff --git a/slirp/bootp.c b/slirp/bootp.c
index 7b1af73..ab7f2c0 100644
--- a/slirp/bootp.c
+++ b/slirp/bootp.c
@@ -341,6 +341,14 @@ static void bootp_reply(Slirp *slirp, const struct bootp_t *bp)
                 q += val;
             }
         }
+
+        if (slirp->root_path) {
+            val = strlen(slirp->root_path);
+            *q++ = RFC1533_ROOTPATH;
+            *q++ = val;
+            memcpy(q, slirp->root_path, val);
+            q += val;
+        }
     } else {
         static const char nak_msg[] = "requested address not available";
 
diff --git a/slirp/libslirp.h b/slirp/libslirp.h
index 42e42e9..64e8cc0 100644
--- a/slirp/libslirp.h
+++ b/slirp/libslirp.h
@@ -15,9 +15,10 @@ Slirp *slirp_init(int restricted, bool in_enabled, struct in_addr vnetwork,
                   struct in6_addr vhost6, const char *vhostname,
                   const char *tftp_server_name,
                   const char *tftp_path, const char *bootfile,
-                  struct in_addr vdhcp_start, struct in_addr vnameserver,
-                  struct in6_addr vnameserver6, const char **vdnssearch,
-                  const char *vdomainname, void *opaque);
+                  const char *rootpath, struct in_addr vdhcp_start,
+                  struct in_addr vnameserver, struct in6_addr vnameserver6,
+                  const char **vdnssearch, const char *vdomainname,
+                  void *opaque);
 void slirp_cleanup(Slirp *slirp);
 
 void slirp_pollfds_fill(GArray *pollfds, uint32_t *timeout);
diff --git a/slirp/slirp.c b/slirp/slirp.c
index 322edf5..7bb7925 100644
--- a/slirp/slirp.c
+++ b/slirp/slirp.c
@@ -285,9 +285,10 @@ Slirp *slirp_init(int restricted, bool in_enabled, struct in_addr vnetwork,
                   struct in6_addr vhost6, const char *vhostname,
                   const char *tftp_server_name,
                   const char *tftp_path, const char *bootfile,
-                  struct in_addr vdhcp_start, struct in_addr vnameserver,
-                  struct in6_addr vnameserver6, const char **vdnssearch,
-                  const char *vdomainname, void *opaque)
+                  const char *rootpath, struct in_addr vdhcp_start,
+                  struct in_addr vnameserver, struct in6_addr vnameserver6,
+                  const char **vdnssearch, const char *vdomainname,
+                  void *opaque)
 {
     Slirp *slirp = g_malloc0(sizeof(Slirp));
 
@@ -318,6 +319,7 @@ Slirp *slirp_init(int restricted, bool in_enabled, struct in_addr vnetwork,
     }
     slirp->tftp_prefix = g_strdup(tftp_path);
     slirp->bootp_filename = g_strdup(bootfile);
+    slirp->root_path = g_strdup(rootpath);
     slirp->vdomainname = g_strdup(vdomainname);
     slirp->vdhcp_startaddr = vdhcp_start;
     slirp->vnameserver_addr = vnameserver;
diff --git a/slirp/slirp.h b/slirp/slirp.h
index b80725a..b8882d4 100644
--- a/slirp/slirp.h
+++ b/slirp/slirp.h
@@ -191,6 +191,7 @@ struct Slirp {
     /* bootp/dhcp states */
     BOOTPClient bootp_clients[NB_BOOTP_CLIENTS];
     char *bootp_filename;
+    char *root_path;
     size_t vdnssearch_len;
     uint8_t *vdnssearch;
     char *vdomainname;
