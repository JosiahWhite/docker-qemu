diff -uNr qemu.orig/net/slirp.c qemu/net/slirp.c
--- qemu.orig/net/slirp.c	2018-07-20 20:04:31.656309443 +0200
+++ qemu/net/slirp.c	2018-07-20 20:05:11.645513165 +0200
@@ -154,10 +154,11 @@
                           bool ipv6, const char *vprefix6, int vprefix6_len,
                           const char *vhost6,
                           const char *vhostname, const char *tftp_export,
-                          const char *bootfile, const char *vdhcp_start,
-                          const char *vnameserver, const char *vnameserver6,
-                          const char *smb_export, const char *vsmbserver,
-                          const char **dnssearch, Error **errp)
+                          const char *bootfile, const char *rootpath,
+                          const char *vdhcp_start, const char *vnameserver,
+                          const char *vnameserver6, const char *smb_export,
+                          const char *vsmbserver, const char **dnssearch,
+                          Error **errp)
 {
     /* default settings according to historic slirp */
     struct in_addr net  = { .s_addr = htonl(0x0a000200) }; /* 10.0.2.0 */
@@ -370,8 +371,8 @@
 
     s->slirp = slirp_init(restricted, ipv4, net, mask, host,
                           ipv6, ip6_prefix, vprefix6_len, ip6_host,
-                          vhostname, tftp_export, bootfile, dhcp,
-                          dns, ip6_dns, dnssearch, s);
+                          vhostname, tftp_export, bootfile, rootpath,
+                          dhcp, dns, ip6_dns, dnssearch, s);
     QTAILQ_INSERT_TAIL(&slirp_stacks, s, entry);
 
     for (config = slirp_configs; config; config = config->next) {
@@ -956,9 +957,9 @@
                          ipv4, vnet, user->host,
                          ipv6, user->ipv6_prefix, user->ipv6_prefixlen,
                          user->ipv6_host, user->hostname, user->tftp,
-                         user->bootfile, user->dhcpstart,
-                         user->dns, user->ipv6_dns, user->smb,
-                         user->smbserver, dnssearch, errp);
+                         user->bootfile, user->rootpath,
+                         user->dhcpstart, user->dns, user->ipv6_dns,
+                         user->smb, user->smbserver, dnssearch, errp);
 
     while (slirp_configs) {
         config = slirp_configs;
diff -uNr qemu.orig/qapi/net.json qemu/qapi/net.json
--- qemu.orig/qapi/net.json	2018-07-20 20:04:31.716311250 +0200
+++ qemu/qapi/net.json	2018-07-20 20:05:11.645513165 +0200
@@ -152,6 +152,8 @@
 #
 # @bootfile: BOOTP filename, for use with tftp=
 #
+# @rootpath: DHCP root-path option, for use with tftp=
+#
 # @dhcpstart: the first of the 16 IPs the built-in DHCP server can
 #             assign
 #
@@ -194,6 +196,7 @@
     '*host':      'str',
     '*tftp':      'str',
     '*bootfile':  'str',
+    '*rootpath':  'str',
     '*dhcpstart': 'str',
     '*dns':       'str',
     '*dnssearch': ['String'],
diff -uNr qemu.orig/qemu-options.hx qemu/qemu-options.hx
--- qemu.orig/qemu-options.hx	2018-07-20 20:04:31.720311369 +0200
+++ qemu/qemu-options.hx	2018-07-20 20:05:11.645513165 +0200
@@ -1907,7 +1907,7 @@
     "         [,ipv6[=on|off]][,ipv6-net=addr[/int]][,ipv6-host=addr]\n"
     "         [,restrict=on|off][,hostname=host][,dhcpstart=addr]\n"
     "         [,dns=addr][,ipv6-dns=addr][,dnssearch=domain][,tftp=dir]\n"
-    "         [,bootfile=f][,hostfwd=rule][,guestfwd=rule]"
+    "         [,bootfile=f][,rootpath=p][,hostfwd=rule][,guestfwd=rule]"
 #ifndef _WIN32
                                              "[,smb=dir[,smbserver=addr]]\n"
 #endif
@@ -2153,6 +2153,16 @@
     -netdev user,id=n1,tftp=/path/to/tftp/files,bootfile=/pxelinux.0
 @end example
 
+@item rootpath=@var{path}
+When using the user mode network stack, broadcast @var{path} as the BOOTP
+root-path. In conjunction with @option{tftp}, this can be used to network boot
+a guest from a local directory.
+
+Example (using pxelinux):
+@example
+qemu-system-i386 -hda linux.img -boot n -net user,tftp=/path/to/tftp/files,rootpath=/nfs
+@end example
+
 @item smb=@var{dir}[,smbserver=@var{addr}]
 When using the user mode network stack, activate a built-in SMB
 server so that Windows OSes can access to the host files in @file{@var{dir}}
diff -uNr qemu.orig/slirp/bootp.c qemu/slirp/bootp.c
--- qemu.orig/slirp/bootp.c	2018-07-20 20:04:31.732311731 +0200
+++ qemu/slirp/bootp.c	2018-07-20 20:05:11.645513165 +0200
@@ -309,6 +309,14 @@
                 q += val;
             }
         }
+
+        if (slirp->root_path) {
+            val = strlen(slirp->root_path);
+            *q++ = RFC1533_ROOTPATH;
+            *q++ = val;
+            memcpy(q, slirp->root_path, val);
+            q += val;
+        }
     } else {
         static const char nak_msg[] = "requested address not available";
 
diff -uNr qemu.orig/slirp/libslirp.h qemu/slirp/libslirp.h
--- qemu.orig/slirp/libslirp.h	2018-07-20 20:04:31.736311851 +0200
+++ qemu/slirp/libslirp.h	2018-07-20 20:05:11.645513165 +0200
@@ -14,9 +14,9 @@
                   struct in6_addr vprefix_addr6, uint8_t vprefix_len,
                   struct in6_addr vhost6, const char *vhostname,
                   const char *tftp_path, const char *bootfile,
-                  struct in_addr vdhcp_start, struct in_addr vnameserver,
-                  struct in6_addr vnameserver6, const char **vdnssearch,
-                  void *opaque);
+                  const char *rootpath,  struct in_addr vdhcp_start,
+                  struct in_addr vnameserver, struct in6_addr vnameserver6,
+                  const char **vdnssearch, void *opaque);
 void slirp_cleanup(Slirp *slirp);
 
 void slirp_pollfds_fill(GArray *pollfds, uint32_t *timeout);
diff -uNr qemu.orig/slirp/slirp.c qemu/slirp/slirp.c
--- qemu.orig/slirp/slirp.c	2018-07-20 20:04:31.736311851 +0200
+++ qemu/slirp/slirp.c	2018-07-20 20:05:11.645513165 +0200
@@ -284,9 +284,9 @@
                   struct in6_addr vprefix_addr6, uint8_t vprefix_len,
                   struct in6_addr vhost6, const char *vhostname,
                   const char *tftp_path, const char *bootfile,
-                  struct in_addr vdhcp_start, struct in_addr vnameserver,
-                  struct in6_addr vnameserver6, const char **vdnssearch,
-                  void *opaque)
+                  const char *rootpath, struct in_addr vdhcp_start,
+                  struct in_addr vnameserver, struct in6_addr vnameserver6,
+                  const char **vdnssearch, void *opaque)
 {
     Slirp *slirp = g_malloc0(sizeof(Slirp));
 
@@ -317,6 +317,7 @@
     }
     slirp->tftp_prefix = g_strdup(tftp_path);
     slirp->bootp_filename = g_strdup(bootfile);
+    slirp->root_path = g_strdup(rootpath);
     slirp->vdhcp_startaddr = vdhcp_start;
     slirp->vnameserver_addr = vnameserver;
     slirp->vnameserver_addr6 = vnameserver6;
diff -uNr qemu.orig/slirp/slirp.h qemu/slirp/slirp.h
--- qemu.orig/slirp/slirp.h	2018-07-20 20:04:31.736311851 +0200
+++ qemu/slirp/slirp.h	2018-07-20 20:05:11.645513165 +0200
@@ -191,6 +191,7 @@
     /* bootp/dhcp states */
     BOOTPClient bootp_clients[NB_BOOTP_CLIENTS];
     char *bootp_filename;
+    char *root_path;
     size_t vdnssearch_len;
     uint8_t *vdnssearch;
 
